## Playbook to deploy the postgres users and databases used for a Cloudera CDH Setup
#
# Required input vars: 
# - databases:  dict following the format of the 'databases' var from cloudera playbook group_vars/db_server.yml
#
- hosts: all
  gather_facts: true
  become: yes
  tasks:
    - name: deploy postgres users
      include_role:
        name: ansible-role-postgresql
        tasks_from: users
      vars:
        db_user: "{{ item.value.user }}"
        db_password: "{{ item.value.pass  }}"
        postgresql_users:
          - name: "{{ db_user }}" #required; the rest are optional
            password: "{{ db_password }}" # defaults to not set
      loop: "{{ databases | dict2items }}"

    - name: deploy postgres databases
      include_role:
        name: ansible-role-postgresql
        tasks_from: databases
      vars:
        db_name: "{{ item.value.name }}"   
        db_user: "{{ item.value.user }}"
        postgresql_databases:
          - name: "{{ db_name }}" # required; the rest are optional
            owner: "{{ db_user }}" # defaults to postgresql_user
      loop: "{{ databases | dict2items }}"

    #TODO deploy one pg_hba rule per database by using the role's "configure" include 
    - name: deploy postgres pg_hba rules
      debug: msg="Not yet implemented"
      vars:
        postgresql_hba_rule_per_db: 
          - {type: host, database: "{{ db_name }}", user: "{{ db_user}}", address: "0.0.0.0/0", auth_method: md5}
